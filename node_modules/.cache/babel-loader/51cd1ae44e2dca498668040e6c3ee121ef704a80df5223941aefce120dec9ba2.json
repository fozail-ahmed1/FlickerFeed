{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fozail\\\\Desktop\\\\flickerfeed\\\\client\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from 'react-redux';\nimport { login, signup } from '../../actions/authentication';\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nfunction AuthForm() {\n  _s();\n  const user = null;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [isLogin, setIsLogin] = useState(true);\n  const onSubmit = formValues => {\n    if (isLogin) {\n      dispatch(login(formValues, navigate));\n    } else {\n      dispatch(signup(formValues, navigate));\n    }\n  };\n  const switchMode = () => {\n    setIsLogin(prevIsLogin => !prevIsLogin);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.card,\n      title: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [isLogin ? \"Login to\" : \"Join\", \" FlickFeed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"authform\",\n        form: form,\n        size: \"large\",\n        wrapperCol: {\n          span: 20,\n          offset: 2\n        },\n        onFinish: onSubmit,\n        children: [isLogin || /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please enter your username\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 48\n              }, this),\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please enter valid email address\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 53\n            }, this),\n            placeholder: \"email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 65\n            }, this),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirmPassword\",\n          rules: [{\n            required: true,\n            message: \"Please repeat your password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 69\n            }, this),\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            typeof: \"primary\",\n            children: isLogin ? \"Log In\" : \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 5px 0px 20px\"\n            },\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            type: \"link\",\n            onClick: switchMode,\n            children: isLogin ? \"Register now\" : \"have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthForm, \"7ku0rj8pDBXF4VDpOFhWfFyNNfo=\", false, function () {\n  return [useNavigate, useDispatch, Form.useForm];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Form","Input","Button","Card","Layout","Typography","UserOutlined","LockOutlined","MailOutlined","useDispatch","login","signup","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","AuthForm","_s","user","navigate","dispatch","form","useForm","isLogin","setIsLogin","onSubmit","formValues","switchMode","prevIsLogin","style","container","children","card","title","level","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","name","size","wrapperCol","span","offset","onFinish","Item","rules","required","message","prefix","placeholder","type","Password","htmlType","typeof","margin","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Fozail/Desktop/flickerfeed/client/src/components/AuthForm/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { login, signup } from '../../actions/authentication';\r\n\r\nimport styles from './styles';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction AuthForm() {\r\n    const user = null;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const [form] = Form.useForm();\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const onSubmit = (formValues) => {\r\n        if (isLogin) {\r\n            dispatch(login(formValues, navigate));\r\n        } else {\r\n            dispatch(signup(formValues, navigate));\r\n        }\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsLogin(prevIsLogin => !prevIsLogin);\r\n    };\r\n\r\n    return (\r\n        <Layout style={styles.container}>\r\n            <Card\r\n                style={styles.card}\r\n                title={\r\n                    <Title level={4} style={{ textAlign: \"center\" }}>\r\n                        { isLogin ? \"Login to\" : \"Join\" } FlickFeed\r\n                    </Title>\r\n                }\r\n            >\r\n                <Form\r\n                    name=\"authform\"\r\n                    form={form}\r\n                    size=\"large\"\r\n                    wrapperCol={{ span: 20, offset: 2 }}\r\n                    onFinish={onSubmit}\r\n                >\r\n                    {isLogin || (\r\n                        <>\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please enter your username\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined />} placeholder=\"username\" />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter valid email address\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter your password\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\r\n                    </Form.Item>\r\n                    {isLogin || (\r\n                        <Form.Item\r\n                            name=\"confirmPassword\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please repeat your password\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\r\n                        </Form.Item>\r\n                    )}\r\n                    <Form.Item>\r\n                        <Button htmlType='submit' typeof='primary'>\r\n                            {isLogin ? \"Log In\" : \"Join\" }\r\n                        </Button>\r\n                        <span style={{ margin: \"0 5px 0px 20px\" }}>Or</span>\r\n                        <Link type='link' onClick={switchMode}>\r\n                            {isLogin ? \"Register now\" : \"have an account?\"}\r\n                        </Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}